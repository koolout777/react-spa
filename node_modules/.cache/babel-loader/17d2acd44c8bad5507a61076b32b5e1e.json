{"ast":null,"code":"import { put, call } from \"redux-saga/effects\"; // Actions   (DONT DELETE THIS LINE: USED FOR BATTLECRY DUCK GENERATOR)\n\nimport { SCROLL_LOCK } from \"./utilsTypes\";\nimport { LOGIN_FORM } from \"./utilsTypes\";\nimport { LOGIN_REGISTRATION_FORM } from \"./utilsTypes\"; // reqFunction   (DONT DELETE THIS LINE: USED FOR BATTLECRY DUCK GENERATOR)\n\nfunction loginFormReq(data) {\n  return data;\n}\n\nfunction loginRegistrationFormReq(data) {\n  return data;\n}\n\nfunction scrollLockReq(data) {\n  return data;\n} // exportFuntion   (DONT DELETE THIS LINE: USED FOR BATTLECRY DUCK GENERATOR)\n\n\nexport function* scrollLock(action) {\n  try {\n    let response = yield call(scrollLockReq, action.payload);\n    yield put({\n      type: `${SCROLL_LOCK}_SUCCESS`,\n      payload: response\n    });\n  } catch (e) {\n    yield put({\n      type: `${SCROLL_LOCK}_FAIL`,\n      payload: e.response\n    });\n  }\n}\nexport function* loginForm(action) {\n  try {\n    let response = yield call(loginFormReq, action.payload);\n    yield put({\n      type: `${LOGIN_FORM}_SUCCESS`,\n      payload: response\n    });\n  } catch (error) {\n    yield put({\n      type: `${LOGIN_FORM}_FAIL`,\n      payload: error\n    });\n  }\n}\nexport function* loginRegistrationForm(action) {\n  try {\n    let response = yield call(loginRegistrationFormReq, action.payload);\n    yield put({\n      type: `${LOGIN_REGISTRATION_FORM}_SUCCESS`,\n      payload: response\n    });\n  } catch (error) {\n    yield put({\n      type: `${LOGIN_REGISTRATION_FORM}_FAIL`,\n      payload: error\n    });\n  }\n}","map":{"version":3,"sources":["/Users/raffy/Documents/training/career-react-blog-graphgql/src/redux/modules/utils/utilsSaga.js"],"names":["put","call","SCROLL_LOCK","LOGIN_FORM","LOGIN_REGISTRATION_FORM","loginFormReq","data","loginRegistrationFormReq","scrollLockReq","scrollLock","action","response","payload","type","e","loginForm","error","loginRegistrationForm"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B,C,CACA;;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,uBAAT,QAAwC,cAAxC,C,CAEA;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAOA,IAAP;AACD;;AAED,SAASC,wBAAT,CAAkCD,IAAlC,EAAwC;AACtC,SAAOA,IAAP;AACD;;AAED,SAASE,aAAT,CAAuBF,IAAvB,EAA6B;AAC3B,SAAOA,IAAP;AACD,C,CAED;;;AACA,OAAO,UAAUG,UAAV,CAAqBC,MAArB,EAA6B;AAClC,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMV,IAAI,CAACO,aAAD,EAAgBE,MAAM,CAACE,OAAvB,CAAzB;AACA,UAAMZ,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAG,GAAEX,WAAY,UAAvB;AAAkCU,MAAAA,OAAO,EAAED;AAA3C,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAMd,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAG,GAAEX,WAAY,OAAvB;AAA+BU,MAAAA,OAAO,EAAEE,CAAC,CAACH;AAA1C,KAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUI,SAAV,CAAoBL,MAApB,EAA4B;AACjC,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMV,IAAI,CAACI,YAAD,EAAeK,MAAM,CAACE,OAAtB,CAAzB;AACA,UAAMZ,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAG,GAAEV,UAAW,UAAtB;AAAiCS,MAAAA,OAAO,EAAED;AAA1C,KAAD,CAAT;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAG,GAAEV,UAAW,OAAtB;AAA8BS,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,CAAgCP,MAAhC,EAAwC;AAC7C,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMV,IAAI,CAACM,wBAAD,EAA2BG,MAAM,CAACE,OAAlC,CAAzB;AACA,UAAMZ,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAG,GAAET,uBAAwB,UAAnC;AAA8CQ,MAAAA,OAAO,EAAED;AAAvD,KAAD,CAAT;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAG,GAAET,uBAAwB,OAAnC;AAA2CQ,MAAAA,OAAO,EAAEI;AAApD,KAAD,CAAT;AACD;AACF","sourcesContent":["import { put, call } from \"redux-saga/effects\";\n// Actions   (DONT DELETE THIS LINE: USED FOR BATTLECRY DUCK GENERATOR)\nimport { SCROLL_LOCK } from \"./utilsTypes\";\nimport { LOGIN_FORM } from \"./utilsTypes\";\nimport { LOGIN_REGISTRATION_FORM } from \"./utilsTypes\";\n\n// reqFunction   (DONT DELETE THIS LINE: USED FOR BATTLECRY DUCK GENERATOR)\nfunction loginFormReq(data) {\n  return data;\n}\n\nfunction loginRegistrationFormReq(data) {\n  return data;\n}\n\nfunction scrollLockReq(data) {\n  return data;\n}\n\n// exportFuntion   (DONT DELETE THIS LINE: USED FOR BATTLECRY DUCK GENERATOR)\nexport function* scrollLock(action) {\n  try {\n    let response = yield call(scrollLockReq, action.payload);\n    yield put({ type: `${SCROLL_LOCK}_SUCCESS`, payload: response });\n  } catch (e) {\n    yield put({ type: `${SCROLL_LOCK}_FAIL`, payload: e.response });\n  }\n}\n\nexport function* loginForm(action) {\n  try {\n    let response = yield call(loginFormReq, action.payload);\n    yield put({ type: `${LOGIN_FORM}_SUCCESS`, payload: response });\n  } catch (error) {\n    yield put({ type: `${LOGIN_FORM}_FAIL`, payload: error });\n  }\n}\n\nexport function* loginRegistrationForm(action) {\n  try {\n    let response = yield call(loginRegistrationFormReq, action.payload);\n    yield put({ type: `${LOGIN_REGISTRATION_FORM}_SUCCESS`, payload: response });\n  } catch (error) {\n    yield put({ type: `${LOGIN_REGISTRATION_FORM}_FAIL`, payload: error });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}